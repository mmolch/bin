#!/bin/bash

if ! tty -s; then
    EPUB_OPTIMIZE_SPAWNED_TERMINAL=1 \
    gnome-terminal --title="EPUB Optimize" --window --wait -- "${BASH_SOURCE}" "${@}"
    exit
fi

for FIL in "$@"; do
    if [ ! -f "${FIL}" ]; then
        echo "epub_optimize | FILe doesn't exist: ${FIL}"
        continue
    fi

    MIMETYPE=$(mimetype -b "${FIL}")
    if [ "${MIMETYPE}" != 'application/epub+zip' ]; then
        echo "epub_optimize | Doesn't seem to be an epub: ${FIL}"
        continue
    fi

    FULLPATH=$(readlink -f "${FIL}")
    OUTPATH="${FULLPATH%.*}_optimized.epub"

    (
        TMPDIR=$(mktemp -d '/tmp/epub_optimize.XXXXXXXX')
        cd "${TMPDIR}"

        echo "Extracting..."
        unzip -q "${FULLPATH}"

        while IFS= read -r IMAGEFILE; do
            [ -z "${IMAGEFILE}" ] && continue

            echo "Scaling image (JPG): ${IMAGEFILE}"
            convert "${IMAGEFILE}" -scale '480x640>' -quality 75 "${IMAGEFILE}"
        done<<<$(find . \( -name '*.jpg' -o -name '*.JPG' -o -name '*.jpeg' -o -name '*.JPEG' \))

        while IFS= read -r IMAGEFILE; do
            [ -z "${IMAGEFILE}" ] && continue

            echo "Scaling image (PNG): ${IMAGEFILE%.*}.jpg"
            convert "${IMAGEFILE}" -scale '480x640>' -quality 75 "${IMAGEFILE%.*}.jpg"
            mv "${IMAGEFILE%.*}.jpg" "${IMAGEFILE}"
        done<<<$(find . \( -name '*.png' -o -name '*.PNG' \))

        while IFS= read -r OPFFILE; do
            [ -z "${OPFFILE}" ] && continue

            echo "Optimizing OPF: ${OPFFILE}"
            mv "${OPFFILE}" "${OPFFILE}.xml"

            TITLE=$(xmlstarlet select -N n='http://www.idpf.org/2007/opf' -N dc='http://purl.org/dc/elements/1.1/' -t -v 'n:package/n:metadata/dc:title' "${OPFFILE}.xml" | head -n 1)
            AUTHOR=$(xmlstarlet select -N n='http://www.idpf.org/2007/opf' -N dc='http://purl.org/dc/elements/1.1/' -t -v 'n:package/n:metadata/dc:creator' "${OPFFILE}.xml" | head -n 1)
            COVER_IMAGE=$(xmlstarlet select -N n='http://www.idpf.org/2007/opf' -N dc='http://purl.org/dc/elements/1.1/' -t -v 'n:package/n:metadata/n:meta[@name="cover"]/@content' "${OPFFILE}.xml" | head -n 1)

            xml ed -N n='http://www.idpf.org/2007/opf' -N dc='http://purl.org/dc/elements/1.1/' --delete '/n:package/n:metadata/*' "${OPFFILE}.xml" \
            | xml ed -N n='http://www.idpf.org/2007/opf' -N dc='http://purl.org/dc/elements/1.1/' --subnode '/n:package/n:metadata' -t elem -n 'dc:title' -v "${TITLE}" \
            | xml ed -N n='http://www.idpf.org/2007/opf' -N dc='http://purl.org/dc/elements/1.1/' --subnode '/n:package/n:metadata' -t elem -n 'dc:creator' -v "${AUTHOR}" \
            | xml ed -N n='http://www.idpf.org/2007/opf' -N dc='http://purl.org/dc/elements/1.1/' --subnode '/n:package/n:metadata' -t elem -n "meta name=\"cover\" content=\"${COVER_IMAGE}\"" > "${OPFFILE}"

            rm "${OPFFILE}.xml"
        done<<<$(find . \( -name '*.opf' -o -name '*.OPF' \))

        echo "PACKING..."
        [ -f "${OUTPATH}" ] && rm "${OUTPATH}"
        zip -q -r -9 "${OUTPATH}" *
        cd ..
        rm -rf "${TMPDIR}"
    )
    
done

if [ -n "${EPUB_OPTIMIZE_SPAWNED_TERMINAL}" ]; then
    echo -e "\e[33;1;32mPress enter to close the window\e[33;0;37m"
    read xxx
fi
